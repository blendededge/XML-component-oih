{
  "title": "XML",
  "description": "Component to convert between XML and JSON data",
  "buildType": "docker",
  "actions": {
    "xmlToJson": {
      "title": "XML to JSON",
      "main": "./lib/actions/xmlToJson.js",
      "help": {
        "description": "Takes XML string and converts it to generic JSON object",
        "link":  "/components/xml/index.html#xml-to-json"
      },
      "metadata": {
        "in": "./lib/schemas/xmlToJson.in.json",
        "out": "./lib/schemas/xmlToJson.out.json"
      },
      "fields": {
        "attachmentServiceUrl": {
          "label": "The URL for the Attachment Storage Service"
        },
        "splitResult": {
          "label": "Split Result if it is an Array",
          "viewClass": "CheckBoxView",
          "note": "After making the request, and applying the above JSONata expression, if the result is an array and this box is checked, we will emit one message for each element of the array."
        },
        "customJsonata": {
          "label": "Allows for custom JSONata expression to be applied to result"
        },
        "childArray": {
          "label": "Turns all children elements of JSON object to array"
        }
      }
    },
    "jsonToXml": {
      "title": "JSON to XML",
      "main": "./lib/actions/jsonToXmlOld.js",
      "deprecated": true,
      "help": {
        "description": "Takes the body of message passed into the component and converts to generic XML string"
      },
      "metadata": {
        "in": {},
        "out": "./lib/schemas/jsonToXmlOld.out.json"
      },
      "fields": {
        "attachmentServiceUrl": {
          "label": "The URL for the Attachment Storage Service"
        }
      }
    },
    "jsonToXmlV2": {
      "title": "JSON to XML",
      "main": "./lib/actions/jsonToXml.js",
      "help": {
        "link":  "/components/xml/index.html#json-to-xml",
        "description": "Takes the result of a JSONata expression and creates corresponding XML as either a string or an attachment"
      },
      "fields": {
        "attachmentServiceUrl": {
          "label": "The URL for the Attachment Storage Service"
        },
        "uploadToAttachment": {
          "order": 3,
          "label": "Upload XML as file to attachments",
          "viewClass": "CheckBoxView"
        },
        "excludeXmlHeader": {
          "order": 2,
          "label": "Exclude XML Header/Description",
          "viewClass": "CheckBoxView"
        },
        "headerStandalone": {
          "order": 1,
          "label": "Is the XML file standalone",
          "viewClass": "CheckBoxView"
        }
      },
      "metadata": {
        "in": {
          "type": "object",
          "properties": {
            "input": {
              "title": "JSON to convert",
              "type": "object",
              "required": true
            }
          }
        },
        "out": {
          "type": "object",
          "properties": {
            "xmlString": {
              "type": "string",
              "required": false,
              "title": "XML String"
            },
            "attachmentUrl": {
              "title": "Attachment URL",
              "type": "string",
              "required": false
            },
            "attachmentSize": {
              "title": "Attachment Size (in bytes)",
              "type": "number",
              "required": false
            }
          }
        }
      }
    },
    "attachmentToJson": {
      "title": "XML Attachment to JSON",
      "main": "./lib/actions/attachmentToJson.js",
      "help": {
        "link":  "/components/xml/index.html#xml-attachment-to-json",
        "description": "Looks at the JSON array of attachments passed in to component and converts all XML found to generic JSON object"
      },
      "fields": {
        "attachmentServiceUrl": {
          "label": "The URL for the Attachment Storage Service"
        },
        "pattern": {
          "label": "Pattern to Match Files",
          "required": false,
          "viewClass": "TextFieldView",
          "placeholder": "Pattern"
        },
        "splitResult": {
          "label": "Split Result if it is an Array",
          "viewClass": "CheckBoxView",
          "note": "After making the request, and applying the above JSONata expression, if the result is an array and this box is checked, we will emit one message for each element of the array."
        },
        "customJsonata": {
          "label": "Allows for custom JSONata expression to be applied to result"
        },
        "childArray": {
          "label": "Turns all children elements of JSON object to array"
        }
      },
      "metadata": {
        "in": {},
        "out": "./lib/schemas/attachmentToJson.out.json"
      }
    }
  }
}

